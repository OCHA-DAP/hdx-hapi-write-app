"""Migrate schema from 0.8.17 to 0.9.0

Revision ID: 0d68c20a0946
Revises: 2762198a212d
Create Date: 2024-10-10 12:22:14.166124

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0d68c20a0946'
down_revision: Union[str, None] = '2762198a212d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

# These are copied out of the hapi-sqlalchemy-schema test suite:
# https://github.com/OCHA-DAP/hapi-sqlalchemy-schema/blob/main/tests/test_views_as_tables.py

# PRIMARY_KEYS = {
#         "conflict_event_vat": [
#         "admin2_ref",
#         "provider_admin1_name",
#         "provider_admin2_name",
#         "event_type",
#         "reference_period_start",
#     ],
#     # "food_price_vat":[], food_price inherits provider names from wfp_market
#     "food_security_vat": ["admin2_ref",
#         "provider_admin1_name",
#         "provider_admin2_name",
#         "ipc_type",
#         "ipc_phase",
#         "reference_period_start"],
#     "humanitarian_needs_vat": ["admin2_ref",
#         "provider_admin1_name",
#         "provider_admin2_name",
#         "gender",
#         "age_range",
#         "sector_code",
#         "population_group",
#         "population_status",
#         "disabled_marker",
#         "reference_period_start",],
#     "idps_vat": ["admin2_ref",
#         "provider_admin1_name",
#         "provider_admin2_name",
#         "assessment_type",
#         "reporting_round",
#         "operation",
#         "reference_period_start",],
#     "operational_presence_vat":["admin2_ref",
#         "provider_admin1_name",
#         "provider_admin2_name",
#         "org_acronym",
#         "org_name",
#         "sector_code",
#         "reference_period_start",],
#     "population_vat": ["admin2_ref",
#         "provider_admin1_name",
#         "provider_admin2_name",
#         "gender",
#         "age_range",
#         "reference_period_start",],
#     "poverty_rate_vat": ["admin1_ref",
#         "provider_admin1_name",
#         "reference_period_start",],
#     # "wpf_market_vat": [] - the primary key for wfp_market_vat is just ["code"] and hasn't changed
#     }

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('conflict_event_vat', sa.Column('provider_admin1_name', sa.String(length=512), nullable=False, server_default='not set'), )
    op.alter_column('conflict_event_vat', 'provider_admin1_name', server_default=None)
    op.add_column('conflict_event_vat', sa.Column('provider_admin2_name', sa.String(length=512), nullable=False, server_default='not set'))
    op.alter_column('conflict_event_vat', 'provider_admin2_name', server_default=None)

    op.add_column('food_price_vat', sa.Column('provider_admin1_name', sa.String(length=512), nullable=False, server_default='not set'))
    op.alter_column('food_price_vat', 'provider_admin1_name', server_default=None)
    op.add_column('food_price_vat', sa.Column('provider_admin2_name', sa.String(length=512), nullable=False, server_default='not set'))
    op.alter_column('food_price_vat', 'provider_admin2_name', server_default=None)
    op.create_index(op.f('ix_food_price_vat_provider_admin1_name'), 'food_price_vat', ['provider_admin1_name'], unique=False)
    op.create_index(op.f('ix_food_price_vat_provider_admin2_name'), 'food_price_vat', ['provider_admin2_name'], unique=False)

    op.add_column('food_security_vat', sa.Column('provider_admin1_name', sa.String(length=512), nullable=False, server_default='not set'))
    op.alter_column('food_security_vat', 'provider_admin1_name', server_default=None)
    op.add_column('food_security_vat', sa.Column('provider_admin2_name', sa.String(length=512), nullable=False, server_default='not set'))
    op.alter_column('food_security_vat', 'provider_admin2_name', server_default=None)

    op.add_column('humanitarian_needs_vat', sa.Column('provider_admin1_name', sa.String(length=512), nullable=False, server_default='not set'))
    op.alter_column('humanitarian_needs_vat', 'provider_admin1_name', server_default=None)
    op.add_column('humanitarian_needs_vat', sa.Column('provider_admin2_name', sa.String(length=512), nullable=False, server_default='not set'))
    op.alter_column('humanitarian_needs_vat', 'provider_admin2_name', server_default=None)
    
    op.add_column('idps_vat', sa.Column('provider_admin1_name', sa.String(length=512), nullable=False, server_default='not set'))
    op.alter_column('idps_vat', 'provider_admin1_name', server_default=None)
    op.add_column('idps_vat', sa.Column('provider_admin2_name', sa.String(length=512), nullable=False, server_default='not set'))
    op.alter_column('idps_vat', 'provider_admin2_name', server_default=None)

    op.add_column('operational_presence_vat', sa.Column('provider_admin1_name', sa.String(length=512), nullable=False, server_default='not set'))
    op.alter_column('operational_presence_vat', 'provider_admin1_name', server_default=None)
    op.add_column('operational_presence_vat', sa.Column('provider_admin2_name', sa.String(length=512), nullable=False, server_default='not set'))
    op.alter_column('operational_presence_vat', 'provider_admin2_name', server_default=None)

    op.add_column('population_vat', sa.Column('provider_admin1_name', sa.String(length=512), nullable=False, server_default='not set'))
    op.alter_column('population_vat', 'provider_admin1_name', server_default=None)
    op.add_column('population_vat', sa.Column('provider_admin2_name', sa.String(length=512), nullable=False, server_default='not set'))
    op.alter_column('population_vat', 'provider_admin2_name', server_default=None)
    op.drop_index('ix_population_vat_reference_period_start', table_name='population_vat')

    op.add_column('poverty_rate_vat', sa.Column('provider_admin1_name', sa.String(length=512), nullable=False, server_default='not set'))
    op.alter_column('poverty_rate_vat', 'provider_admin1_name', server_default=None)
    op.drop_index('ix_poverty_rate_vat_admin1_name', table_name='poverty_rate_vat')

    op.add_column('wfp_market_vat', sa.Column('provider_admin1_name', sa.String(length=512), nullable=False, server_default='not set'))
    op.alter_column('wfp_market_vat', 'provider_admin1_name', server_default=None)
    op.add_column('wfp_market_vat', sa.Column('provider_admin2_name', sa.String(length=512), nullable=False, server_default='not set'))
    op.alter_column('wfp_market_vat', 'provider_admin2_name', server_default=None)
    op.create_index(op.f('ix_wfp_market_vat_provider_admin1_name'), 'wfp_market_vat', ['provider_admin1_name'], unique=False)
    op.create_index(op.f('ix_wfp_market_vat_provider_admin2_name'), 'wfp_market_vat', ['provider_admin2_name'], unique=False)
    # ### end Alembic autogenerated commands commands ###
    

    # for table_name, primary_keys in PRIMARY_KEYS.items():
    #     op.drop_constraint(f'{table_name}_pkey', table_name, type_='primary')
    #     op.create_primary_key(f'{table_name}_pkey', table_name, primary_keys)



def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_wfp_market_vat_provider_admin2_name'), table_name='wfp_market_vat')
    op.drop_index(op.f('ix_wfp_market_vat_provider_admin1_name'), table_name='wfp_market_vat')
    op.drop_column('wfp_market_vat', 'provider_admin2_name')
    op.drop_column('wfp_market_vat', 'provider_admin1_name')
    op.create_index('ix_poverty_rate_vat_admin1_name', 'poverty_rate_vat', ['admin1_name'], unique=False)
    op.drop_column('poverty_rate_vat', 'provider_admin1_name')
    op.create_index('ix_population_vat_reference_period_start', 'population_vat', ['reference_period_start'], unique=False)
    op.drop_column('population_vat', 'provider_admin2_name')
    op.drop_column('population_vat', 'provider_admin1_name')
    op.drop_column('operational_presence_vat', 'provider_admin2_name')
    op.drop_column('operational_presence_vat', 'provider_admin1_name')
    op.drop_column('idps_vat', 'provider_admin2_name')
    op.drop_column('idps_vat', 'provider_admin1_name')
    op.drop_column('humanitarian_needs_vat', 'provider_admin2_name')
    op.drop_column('humanitarian_needs_vat', 'provider_admin1_name')
    op.drop_column('food_security_vat', 'provider_admin2_name')
    op.drop_column('food_security_vat', 'provider_admin1_name')
    op.drop_index(op.f('ix_food_price_vat_provider_admin2_name'), table_name='food_price_vat')
    op.drop_index(op.f('ix_food_price_vat_provider_admin1_name'), table_name='food_price_vat')
    op.drop_column('food_price_vat', 'provider_admin2_name')
    op.drop_column('food_price_vat', 'provider_admin1_name')
    op.drop_column('conflict_event_vat', 'provider_admin2_name')
    op.drop_column('conflict_event_vat', 'provider_admin1_name')
    # ### end Alembic commands ###

    # for table_name, primary_keys in PRIMARY_KEYS.items():
    #     downgrade_key = [x for x in primary_keys if not x.startswith("provider_")]
    #     op.create_primary_key(f'{table_name}_pkey', table_name, downgrade_key)