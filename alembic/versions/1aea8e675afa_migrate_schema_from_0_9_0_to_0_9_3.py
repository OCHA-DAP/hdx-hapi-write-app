"""Migrate schema from 0.9.0 to 0.9.3

Revision ID: 1aea8e675afa
Revises: ed9e8cb917f4
Create Date: 2024-10-29 07:10:05.182366

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1aea8e675afa'
down_revision: Union[str, None] = 'ed9e8cb917f4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Delete all data from the table to avoid
    # 1. NotNullViolation - because of `nullable=False` in the new column
    # 2. UniqueViolation - because of the new primary key (since we're dropping so many columns the chances of 
    #    a unique constraint violation are high)
    op.execute("DELETE FROM humanitarian_needs_vat")

    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('humanitarian_needs_vat', sa.Column('category', sa.String(length=128), nullable=False))
    op.drop_index('ix_humanitarian_needs_vat_max_age', table_name='humanitarian_needs_vat')
    op.drop_index('ix_humanitarian_needs_vat_min_age', table_name='humanitarian_needs_vat')
    op.drop_column('humanitarian_needs_vat', 'min_age')
    op.drop_column('humanitarian_needs_vat', 'gender')
    op.drop_column('humanitarian_needs_vat', 'age_range')
    op.drop_column('humanitarian_needs_vat', 'population_group')
    op.drop_column('humanitarian_needs_vat', 'max_age')
    op.drop_column('humanitarian_needs_vat', 'disabled_marker')
    op.create_primary_key('humanitarian_needs_vat_pkey', "humanitarian_needs_vat", ["admin2_ref",
        "provider_admin1_name",
        "provider_admin2_name",
        "sector_code",
        "category",
        "population_status",
        "reference_period_start"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('humanitarian_needs_vat', sa.Column('disabled_marker', postgresql.ENUM('y', 'n', 'all', name='disabledmarker'), autoincrement=False, nullable=False))
    op.add_column('humanitarian_needs_vat', sa.Column('max_age', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('humanitarian_needs_vat', sa.Column('population_group', postgresql.ENUM('REF', 'ROC', 'ASY', 'OIP', 'IDP', 'IOC', 'STA', 'OOC', 'HST', 'RET', 'RST', 'NAT', 'RDP', 'RRI', 'all', name='populationgroup'), autoincrement=False, nullable=False))
    op.add_column('humanitarian_needs_vat', sa.Column('age_range', sa.VARCHAR(length=32), autoincrement=False, nullable=False))
    op.add_column('humanitarian_needs_vat', sa.Column('gender', postgresql.ENUM('f', 'm', 'x', 'u', 'o', 'all', name='gender'), autoincrement=False, nullable=False))
    op.add_column('humanitarian_needs_vat', sa.Column('min_age', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_index('ix_humanitarian_needs_vat_min_age', 'humanitarian_needs_vat', ['min_age'], unique=False)
    op.create_index('ix_humanitarian_needs_vat_max_age', 'humanitarian_needs_vat', ['max_age'], unique=False)
    op.drop_column('humanitarian_needs_vat', 'category')
    op.create_primary_key('humanitarian_needs_vat_pkey', "humanitarian_needs_vat", ["admin2_ref",
        "provider_admin1_name",
        "provider_admin2_name",
        "sector_code",
        "gender",
        "age_range",
        "population_group",
        "disabled_marker",
        "population_status",
        "reference_period_start"])
    # ### end Alembic commands ###
