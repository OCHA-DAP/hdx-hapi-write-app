"""upgrade to 0.8.16 schema

Revision ID: ecca1ef814df
Revises: 844d4f958348
Create Date: 2024-09-06 09:49:12.688949

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ecca1ef814df'
down_revision: Union[str, None] = '844d4f958348'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('data_availability_vat',
    sa.Column('category', sa.String(length=128), nullable=False),
    sa.Column('subcategory', sa.String(length=128), nullable=False),
    sa.Column('location_name', sa.String(length=512), nullable=False),
    sa.Column('location_code', sa.String(length=128), nullable=False),
    sa.Column('admin1_name', sa.String(length=512), nullable=False),
    sa.Column('admin1_code', sa.String(length=128), nullable=False),
    sa.Column('admin2_name', sa.String(length=512), nullable=False),
    sa.Column('admin2_code', sa.String(length=128), nullable=False),
    sa.Column('hapi_updated_date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('category', 'subcategory', 'location_name', 'location_code', 'admin1_name', 'admin1_code', 'admin2_name', 'admin2_code')
    )
    op.create_index(op.f('ix_data_availability_vat_hapi_updated_date'), 'data_availability_vat', ['hapi_updated_date'], unique=False)
    op.create_table('idps_vat',
    sa.Column('resource_hdx_id', sa.String(length=36), nullable=False),
    sa.Column('admin2_ref', sa.Integer(), nullable=False),
    sa.Column('assessment_type', sa.String(length=32), nullable=False),
    sa.Column('reporting_round', sa.Integer(), nullable=True),
    sa.Column('population', sa.Integer(), nullable=False),
    sa.Column('reference_period_start', sa.DateTime(), nullable=False),
    sa.Column('reference_period_end', sa.DateTime(), nullable=True),
    sa.Column('location_code', sa.String(length=128), nullable=False),
    sa.Column('location_name', sa.String(length=512), nullable=False),
    sa.Column('has_hrp', sa.Boolean(), nullable=False),
    sa.Column('in_gho', sa.Boolean(), nullable=False),
    sa.Column('admin1_code', sa.String(length=128), nullable=False),
    sa.Column('admin1_name', sa.String(length=512), nullable=False),
    sa.Column('admin1_is_unspecified', sa.Boolean(), nullable=False),
    sa.Column('location_ref', sa.Integer(), nullable=False),
    sa.Column('admin2_code', sa.String(length=128), nullable=False),
    sa.Column('admin2_name', sa.String(length=512), nullable=False),
    sa.Column('admin2_is_unspecified', sa.Boolean(), nullable=False),
    sa.Column('admin1_ref', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('admin2_ref', 'assessment_type', 'reference_period_start')
    )
    op.create_index(op.f('ix_idps_vat_admin1_code'), 'idps_vat', ['admin1_code'], unique=False)
    op.create_index(op.f('ix_idps_vat_admin1_name'), 'idps_vat', ['admin1_name'], unique=False)
    op.create_index(op.f('ix_idps_vat_admin2_code'), 'idps_vat', ['admin2_code'], unique=False)
    op.create_index(op.f('ix_idps_vat_admin2_name'), 'idps_vat', ['admin2_name'], unique=False)
    op.create_index(op.f('ix_idps_vat_location_code'), 'idps_vat', ['location_code'], unique=False)
    op.create_index(op.f('ix_idps_vat_location_name'), 'idps_vat', ['location_name'], unique=False)
    op.create_index(op.f('ix_idps_vat_population'), 'idps_vat', ['population'], unique=False)
    op.create_index(op.f('ix_idps_vat_reference_period_end'), 'idps_vat', ['reference_period_end'], unique=False)
    op.create_table('returnees_vat',
    sa.Column('resource_hdx_id', sa.String(length=36), nullable=False),
    sa.Column('origin_location_ref', sa.Integer(), nullable=False),
    sa.Column('asylum_location_ref', sa.Integer(), nullable=False),
    sa.Column('population_group', sa.Enum('REF', 'ROC', 'ASY', 'OIP', 'IDP', 'IOC', 'STA', 'OOC', 'HST', 'RET', 'RST', 'NAT', 'RDP', 'RRI', 'all', name='populationgroup'), nullable=False),
    sa.Column('gender', sa.Enum('f', 'm', 'x', 'u', 'o', 'all', name='gender'), nullable=False),
    sa.Column('age_range', sa.String(length=32), nullable=False),
    sa.Column('min_age', sa.Integer(), nullable=True),
    sa.Column('max_age', sa.Integer(), nullable=True),
    sa.Column('population', sa.Integer(), nullable=False),
    sa.Column('reference_period_start', sa.DateTime(), nullable=False),
    sa.Column('reference_period_end', sa.DateTime(), nullable=True),
    sa.Column('origin_location_code', sa.String(length=128), nullable=False),
    sa.Column('origin_location_name', sa.String(length=512), nullable=False),
    sa.Column('origin_has_hrp', sa.Boolean(), nullable=False),
    sa.Column('origin_in_gho', sa.Boolean(), nullable=False),
    sa.Column('asylum_location_code', sa.String(length=128), nullable=False),
    sa.Column('asylum_location_name', sa.String(length=512), nullable=False),
    sa.Column('asylum_has_hrp', sa.Boolean(), nullable=False),
    sa.Column('asylum_in_gho', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('origin_location_ref', 'asylum_location_ref', 'population_group', 'gender', 'age_range', 'reference_period_start')
    )
    op.create_index(op.f('ix_returnees_vat_asylum_location_code'), 'returnees_vat', ['asylum_location_code'], unique=False)
    op.create_index(op.f('ix_returnees_vat_asylum_location_name'), 'returnees_vat', ['asylum_location_name'], unique=False)
    op.create_index(op.f('ix_returnees_vat_max_age'), 'returnees_vat', ['max_age'], unique=False)
    op.create_index(op.f('ix_returnees_vat_min_age'), 'returnees_vat', ['min_age'], unique=False)
    op.create_index(op.f('ix_returnees_vat_origin_location_code'), 'returnees_vat', ['origin_location_code'], unique=False)
    op.create_index(op.f('ix_returnees_vat_origin_location_name'), 'returnees_vat', ['origin_location_name'], unique=False)
    op.create_index(op.f('ix_returnees_vat_population'), 'returnees_vat', ['population'], unique=False)
    op.create_index(op.f('ix_returnees_vat_reference_period_end'), 'returnees_vat', ['reference_period_end'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_returnees_vat_reference_period_end'), table_name='returnees_vat')
    op.drop_index(op.f('ix_returnees_vat_population'), table_name='returnees_vat')
    op.drop_index(op.f('ix_returnees_vat_origin_location_name'), table_name='returnees_vat')
    op.drop_index(op.f('ix_returnees_vat_origin_location_code'), table_name='returnees_vat')
    op.drop_index(op.f('ix_returnees_vat_min_age'), table_name='returnees_vat')
    op.drop_index(op.f('ix_returnees_vat_max_age'), table_name='returnees_vat')
    op.drop_index(op.f('ix_returnees_vat_asylum_location_name'), table_name='returnees_vat')
    op.drop_index(op.f('ix_returnees_vat_asylum_location_code'), table_name='returnees_vat')
    op.drop_table('returnees_vat')
    op.drop_index(op.f('ix_idps_vat_reference_period_end'), table_name='idps_vat')
    op.drop_index(op.f('ix_idps_vat_population'), table_name='idps_vat')
    op.drop_index(op.f('ix_idps_vat_location_name'), table_name='idps_vat')
    op.drop_index(op.f('ix_idps_vat_location_code'), table_name='idps_vat')
    op.drop_index(op.f('ix_idps_vat_admin2_name'), table_name='idps_vat')
    op.drop_index(op.f('ix_idps_vat_admin2_code'), table_name='idps_vat')
    op.drop_index(op.f('ix_idps_vat_admin1_name'), table_name='idps_vat')
    op.drop_index(op.f('ix_idps_vat_admin1_code'), table_name='idps_vat')
    op.drop_table('idps_vat')
    op.drop_index(op.f('ix_data_availability_vat_hapi_updated_date'), table_name='data_availability_vat')
    op.drop_table('data_availability_vat')
    # ### end Alembic commands ###
